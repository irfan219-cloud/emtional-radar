version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: feedback-analyzer-db
    environment:
      POSTGRES_DB: feedback_analyzer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - feedback-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: feedback-analyzer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - feedback-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: feedback-analyzer-api
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://postgres:password@postgres:5432/feedback_analyzer
      REDIS_URL: redis://redis:6379
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - feedback-network
    command: npm run dev

  # Frontend Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: feedback-analyzer-dashboard
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000
      NEXT_PUBLIC_WS_URL: http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - feedback-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  feedback-network:
    driver: bridge